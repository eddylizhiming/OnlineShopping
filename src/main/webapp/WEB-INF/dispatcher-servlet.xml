<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">


	<!-- 扫描web包中标注了@controller的类，放入Spring容器 -->
	<context:component-scan base-package="web" />

	<!-- 引入视图对象的配置文件，默认在WEB/INF下的views.xml -->
	<bean class="org.springframework.web.servlet.view.XmlViewResolver"
		p:order="1" />

	<!-- HTTP请求处理器适配器 -->
	<bean class="org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter"></bean>
	<bean class="tool.UTF8StringHttpMessageConverter" />
	<!-- 配置这个，@Valid注解才会生效 ，注解驱动。，并有优雅风格的网址，如user/123456 -->
	<mvc:annotation-driven />

	<!-- 可以访问静态资源 -->
	<mvc:default-servlet-handler />

	<!-- 配置文件上传 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
		p:defaultEncoding="utf-8" p:maxUploadSize="5248800" p:uploadTempDir="uploads/temp" />

	<!-- 配置资源目录，将多个物理路径映射为一个逻辑路径 -->
	<mvc:resources mapping="/resourceRoot/**" location="/,classpath:/" />

	<!-- 异常处理 -->
	<bean id="exceptionResolver"
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="statusCodes">
			<props>
				<!-- HTTP错误码web.xml中配置 -->
				<prop key="/OnlineShopping/jsp/exception/500.jsp">500</prop>
			</props>
		</property>
	</bean>

	<!-- 配置内容协商视图解析器，可使用?content=xxx来以不同MIME形式获取相同资源 -->
	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver"
		p:order="2" p:defaultContentType="text/html" p:ignoreAcceptHeader="true"
		p:favorPathExtension="false" p:favorParameter="true" p:parameterName="content">

		<property name="mediaTypes">
			<map>
				<entry key="html" value="text/html"></entry>
				<entry key="xml" value="application/xml"></entry>
				<entry key="json" value="application/json"></entry>
			</map>
		</property>
		<property name="defaultViews">
			<list>
				<bean
					class="org.springframework.web.servlet.view.json.MappingJacksonJsonView"
					p:renderedAttributes="orders" />
				<bean class="org.springframework.web.servlet.view.xml.MarshallingView"
					p:modelKey="orders" p:marshaller-ref="xmlMarshaller" />
			</list>
		</property>
	</bean>
	<!-- 默认视图解析器，如JSP等文件由它负责 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:order="100" p:viewClass="org.springframework.web.servlet.view.JstlView"
		p:prefix="/WEB-INF/jsp/" p:suffix=".jsp" />

	<!-- bean名称的视图解析器 -->
	<bean class="org.springframework.web.servlet.view.BeanNameViewResolver"
		p:order="10"></bean>

	<!-- XML编组器 -->
	<bean id="xmlMarshaller" class="org.springframework.oxm.xstream.XStreamMarshaller">
		<property name="streamDriver">
			<bean class="com.thoughtworks.xstream.io.xml.StaxDriver" />
		</property>
		<property name="annotatedClasses">
			<list>
				<value>domain.Order</value>
			</list>
		</property>
	</bean>

	<!-- 订单列表XML形式 -->
	<bean id="orderListXml" class="org.springframework.web.servlet.view.xml.MarshallingView"
		p:modelKey="orders"
		p:marshaller-ref="xmlMarshaller"/>
	
		
	<!-- 配置国际化资源，自动重载 -->
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource"
		p:basenames="conf/i18n/message, conf/i18n/info"/>
		
	<!-- 基于Cookie的时区解析器-->
	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.CookieLocaleResolver"
		p:cookieName="clientLanguage"
		p:cookieMaxAge="100000"
		p:cookiePath="/"
		p:defaultLocale="zh_CN"/>
	
	<!-- 时区改变拦截器 -->
	<mvc:interceptors>
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"></bean>
	</mvc:interceptors>
</beans>
